#pragma once

#include "em/macros/platform/preprocessor.h"

// This is used internally in the `#if` conditions to decide if we should enable the short macro forms or not.
// You can enable all those globally by defining `EM_SHORT_MACROS` (to 1 or empty).
// But you can also override a specific one by defining `EM_SHORT_MACROS_##name` (1 or empty to enable,
//   0 to disable, undefined to fall back to `EM_SHORT_MACROS`).
// You shouldn't define those two macros to anything other than `1`, `0` or empty.
#define EM_ENABLE_SHORT_MACROS(name) DETAIL_EM_ENABLE_SHORT_MACROS1(EM_SHORT_MACROS_##name)

#define DETAIL_EM_ENABLE_SHORT_MACROS1(x) DETAIL_EM_ENABLE_SHORT_MACROS4(DETAIL_EM_ENABLE_SHORT_MACROS2(x)(), DETAIL_EM_ENABLE_SHORT_MACROS4_DEF, DETAIL_EM_ENABLE_SHORT_MACROS4_UNDEF,)
#define DETAIL_EM_ENABLE_SHORT_MACROS2(...) DETAIL_EM_ENABLE_SHORT_MACROS3_##__VA_ARGS__
#define DETAIL_EM_ENABLE_SHORT_MACROS3_1() 1,x
#define DETAIL_EM_ENABLE_SHORT_MACROS3_0() 0,x
#define DETAIL_EM_ENABLE_SHORT_MACROS3_() 1,x
#define DETAIL_EM_ENABLE_SHORT_MACROS4_DEF(x) x
#define DETAIL_EM_ENABLE_SHORT_MACROS4_UNDEF(...) DETAIL_EM_ENABLE_SHORT_MACROS6(EM_SHORT_MACROS)
#define DETAIL_EM_ENABLE_SHORT_MACROS4(...) DETAIL_EM_ENABLE_SHORT_MACROS5(__VA_ARGS__)
#if EM_IS_LEGACY_MSVC_PREPROCESSOR
#define DETAIL_EM_ENABLE_SHORT_MACROS_DEFER
#define DETAIL_EM_ENABLE_SHORT_MACROS5(...) DETAIL_EM_ENABLE_SHORT_MACROS5_ DETAIL_EM_ENABLE_SHORT_MACROS_DEFER(__VA_ARGS__)
#else
#define DETAIL_EM_ENABLE_SHORT_MACROS5(...) DETAIL_EM_ENABLE_SHORT_MACROS5_(__VA_ARGS__)
#endif
#define DETAIL_EM_ENABLE_SHORT_MACROS5_(x, y, z, ...) z(x)

#define DETAIL_EM_ENABLE_SHORT_MACROS6(x) DETAIL_EM_ENABLE_SHORT_MACROS6_(x)
#define DETAIL_EM_ENABLE_SHORT_MACROS6_(...) DETAIL_EM_ENABLE_SHORT_MACROS7_##__VA_ARGS__()
#define DETAIL_EM_ENABLE_SHORT_MACROS7_1() 1
#define DETAIL_EM_ENABLE_SHORT_MACROS7_0() 0
#define DETAIL_EM_ENABLE_SHORT_MACROS7_() 1
#define DETAIL_EM_ENABLE_SHORT_MACROS7_EM_SHORT_MACROS() 0

// ---

// Same as `EM_ENABLE_SHORT_MACROS`, but for keyword macros.
// Everything else is the same, but the syntax uses `_KEYWORD_` instead of `_SHORT_`.
#define EM_ENABLE_KEYWORD_MACROS(name) DETAIL_EM_ENABLE_KEYWORD_MACROS1(EM_KEYWORD_MACROS_##name)

#define DETAIL_EM_ENABLE_KEYWORD_MACROS1(x) DETAIL_EM_ENABLE_KEYWORD_MACROS4(DETAIL_EM_ENABLE_KEYWORD_MACROS2(x)(), DETAIL_EM_ENABLE_KEYWORD_MACROS4_DEF, DETAIL_EM_ENABLE_KEYWORD_MACROS4_UNDEF,)
#define DETAIL_EM_ENABLE_KEYWORD_MACROS2(...) DETAIL_EM_ENABLE_KEYWORD_MACROS3_##__VA_ARGS__
#define DETAIL_EM_ENABLE_KEYWORD_MACROS3_1() 1,x
#define DETAIL_EM_ENABLE_KEYWORD_MACROS3_0() 0,x
#define DETAIL_EM_ENABLE_KEYWORD_MACROS3_() 1,x
#define DETAIL_EM_ENABLE_KEYWORD_MACROS4_DEF(x) x
#define DETAIL_EM_ENABLE_KEYWORD_MACROS4_UNDEF(...) DETAIL_EM_ENABLE_KEYWORD_MACROS6(EM_KEYWORD_MACROS)
#define DETAIL_EM_ENABLE_KEYWORD_MACROS4(...) DETAIL_EM_ENABLE_KEYWORD_MACROS5(__VA_ARGS__)
#if EM_IS_LEGACY_MSVC_PREPROCESSOR
#define DETAIL_EM_ENABLE_KEYWORD_MACROS_DEFER
#define DETAIL_EM_ENABLE_KEYWORD_MACROS5(...) DETAIL_EM_ENABLE_KEYWORD_MACROS5_ DETAIL_EM_ENABLE_KEYWORD_MACROS_DEFER(__VA_ARGS__)
#else
#define DETAIL_EM_ENABLE_KEYWORD_MACROS5(...) DETAIL_EM_ENABLE_KEYWORD_MACROS5_(__VA_ARGS__)
#endif
#define DETAIL_EM_ENABLE_KEYWORD_MACROS5_(x, y, z, ...) z(x)

#define DETAIL_EM_ENABLE_KEYWORD_MACROS6(x) DETAIL_EM_ENABLE_KEYWORD_MACROS6_(x)
#define DETAIL_EM_ENABLE_KEYWORD_MACROS6_(...) DETAIL_EM_ENABLE_KEYWORD_MACROS7_##__VA_ARGS__()
#define DETAIL_EM_ENABLE_KEYWORD_MACROS7_1() 1
#define DETAIL_EM_ENABLE_KEYWORD_MACROS7_0() 0
#define DETAIL_EM_ENABLE_KEYWORD_MACROS7_() 1
#define DETAIL_EM_ENABLE_KEYWORD_MACROS7_EM_KEYWORD_MACROS() 0
