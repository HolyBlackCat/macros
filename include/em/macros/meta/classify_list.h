#pragma once

// Classifies the list. For `(a)(b)(c)` returns `SEQ`, and for `a,b,c` (or empty) returns `VA`.
#define EM_CLASSIFY_LIST(...) DETAIL_EM_CLASSIFY_LIST(__VA_ARGS__)

#define DETAIL_EM_CLASSIFY_LIST(...) DETAIL_EM_CLASSIFY_LIST_APPLY(DETAIL_EM_CLASSIFY_LIST_DETECT_SEQ __VA_ARGS__)
#define DETAIL_EM_CLASSIFY_LIST_DETECT_SEQ(...) DETAIL_EM_CLASSIFY_LIST_DETECTED_SEQ(__VA_ARGS__)
#define DETAIL_EM_CLASSIFY_LIST_APPLY(...) DETAIL_EM_CLASSIFY_LIST_APPLY_(__VA_ARGS__) )
#define DETAIL_EM_CLASSIFY_LIST_APPLY_(...) DETAIL_EM_CLASSIFY_LIST_CHECK_##__VA_ARGS__
#define DETAIL_EM_CLASSIFY_LIST_CHECK_DETAIL_EM_CLASSIFY_LIST_DETECT_SEQ VA DETAIL_EM_CLASSIFY_LIST_EMPTY(
#define DETAIL_EM_CLASSIFY_LIST_CHECK_DETAIL_EM_CLASSIFY_LIST_DETECTED_SEQ SEQ DETAIL_EM_CLASSIFY_LIST_EMPTY(
#define DETAIL_EM_CLASSIFY_LIST_EMPTY(...)

// EM_CLASSIFY_LIST((1)(2)(3)) // SEQ
// EM_CLASSIFY_LIST(1, 2, 3) // VA
// EM_CLASSIFY_LIST() // VA
